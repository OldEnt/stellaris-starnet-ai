## Categories used in this file must have use_for_ai_budget = yes defined in economic_categories ##
## It is possible to have multiple entries with the same category and resource ##

#################
## Expenditure ##
#################
influence_expenditure_buffer = { # Buffer, will not be spent
	resource = influence
	type = expenditure
	category = buffer

	potential = {
		always = no
		str_ai_budget_potential_influence_expenditure_buffer = yes
	}

	weight = {
		weight = 0.0
	}
}

influence_expenditure_decisions = {
	resource = influence
	type = expenditure
	category = decisions

	potential = {
		str_ai_budget_potential_influence_expenditure_decisions = yes
	}

	weight = {
		weight = 0.20
		modifier = {
			factor = 2
			OR = {
				AND = {
					has_technology = tech_housing_2
					any_owned_planet = {
						is_planet_class = pc_relic
						num_uncleared_blockers < 1
					}
				}
				AND = {
					has_ascension_perk = ap_arcology_project
					any_owned_planet = {
						is_artificial = no
						NOR = {
							is_planet_class = pc_city
							is_planet_class = pc_relic
							has_modifier = resort_colony
							has_modifier = penal_colony
							has_modifier = slave_colony
							has_modifier = pm_wenkwort_custodian
						}
						num_uncleared_blockers < 1
						free_district_slots < 1
						OR = {
							num_pops >= 70
							is_capital = yes
						}
					}
				}
			}
		}
	}

	# this is the cost of the arcology project decision
	desired_max = {
		base = 200
	}
}

influence_expenditure_resolutions = {
	resource = influence
	type = expenditure
	category = resolutions

	potential = {
		str_ai_budget_potential_influence_expenditure_resolutions = yes
		is_galactic_community_member = yes
		NOT = { is_proposing_resolution = "any" }
	}

	weight = {
		weight = 0.30
	}

	# min/max resolution proposal costs defined in resolutions.txt
	desired_min = {
		base = 100
	}
	desired_max = {
		base = 300
	}
}

influence_expenditure_agreement_proposals = {
	resource = influence
	type = expenditure
	category = agreement_proposals

	potential = {
		str_ai_budget_potential_influence_expenditure_agreement_proposals = yes
		is_overlord = yes
		ai_wants_to_negotiate_agreement = yes
	}

	weight = {
		weight = 1000
	}
}

influence_expenditure_edicts = {
	resource = influence
	type = expenditure
	category = edicts

	potential = {
		str_ai_budget_potential_influence_expenditure_edicts = yes
		is_sovereign_guardianship_empire = yes
		NOT = { has_edict = inner_focus }
	}

	weight = {
		weight = 0.25
	}

	desired_min = {
		base = 100
	}

	desired_max = {
		base = 100
	}
}

influence_upkeep_edicts = {
	resource = influence
	type = upkeep
	category = edicts
	potential = {
		str_ai_budget_potential_influence_upkeep_edicts = yes
		has_edict = inner_focus
		has_resource = {
			type = influence
			amount > 300
		}
	}
	weight = {
		weight = 0.5
	}
	desired_max = {
		base = 3
	}
}

influence_expenditure_stations = {
	resource = influence
	type = expenditure
	category = stations

	potential = {
		str_ai_budget_potential_influence_expenditure_stations = yes
		has_ai_expansion_plan = yes
	}

	weight = {
		weight = 0.50
	}

	# min is 1 jump away
	desired_min = {
		base = 75
	}

	# max is 2 jumps away
	desired_max = {
		base = 150
	}
}

influence_expenditure_claims = {
	resource = influence
	type = expenditure
	category = claims

	potential = {
		str_ai_budget_potential_influence_expenditure_claims = yes
		NOT = {
			OR = {
				has_ethic = ethic_fanatic_pacifist
				has_ethic = ethic_pacifist
				has_crisis_level = crisis_level_2
			}
		}
		has_potential_claims = yes
	}

	weight = {
		weight = 0.15
	}
}

influence_expenditure_claims_militarist = {
	resource = influence
	type = expenditure
	category = claims

	potential = {
		str_ai_budget_potential_influence_expenditure_claims_militarist = yes
		has_ethic = ethic_militarist
		has_potential_claims = yes
	}

	weight = {
		weight = 0.05
	}
}

influence_expenditure_claims_fanatic_militarist = {
	resource = influence
	type = expenditure
	category = claims

	potential = {
		str_ai_budget_potential_influence_expenditure_claims_fanatic_militarist = yes
		has_ethic = ethic_fanatic_militarist
		has_potential_claims = yes
	}

	weight = {
		weight = 0.10
	}
}

influence_expenditure_megastructures = {
	resource = influence
	type = expenditure
	category = megastructures

	potential = {
		str_ai_budget_potential_influence_expenditure_megastructures = yes
		is_at_war = no
		has_resource = {
			type = influence
			amount > 500
		}
		can_build_megastructures = yes
	}

	weight = {
		weight = 0.1
	}

	# only used by construction sites, base cost is 300
	desired_min = {
		base = 75
		modifier = {
			add = 225
			has_technology = tech_ring_world
			NOT = {
				any_owned_planet = { is_planet_class = pc_ringworld_habitable }
			}
		}
	}
	desired_max = {
		base = 75
		modifier = {
			add = 225
			has_technology = tech_ring_world
		}
	}
}

influence_expenditure_habitats = {
	resource = influence
	type = expenditure
	category = megastructures_habitat

	potential = {
		str_ai_budget_potential_influence_expenditure_habitats = yes
		ai_should_build_habitats = yes
	}

	weight = {
		weight = 0.1
		modifier = {
			factor = 2
			has_origin = origin_void_dwellers
		}
		modifier = {
			factor = 2
			has_origin = origin_void_dwellers
			count_owned_planet = {
				limit = { is_planet_class = pc_habitat }
				count < 4
			}
		}
		modifier = {
			factor = 2
			has_origin = origin_void_dwellers
			count_owned_planet = {
				limit = { is_planet_class = pc_habitat }
				count < 6
			}
		}
		modifier = {
			factor = 5
			mid_game_years_passed > 0
			num_owned_planets < 12
		}
		modifier = {
			factor = 0.5
			has_trait = trait_aquatic
		}
		modifier = { #Build fortress habitats
			factor = 2
			used_naval_capacity_percent > 0.95
			used_starbase_capacity_percent >= 1
		}
	}

	desired_min = {
		base = 150
	}
	desired_max = {
		base = 150
	}
}

influence_expenditure_starbases = {
	resource = influence
	type = expenditure
	category = starbases

	potential = {
		str_ai_budget_potential_influence_expenditure_starbases = yes
		count_owned_nonprimary_starbase = {
			count > 0
		}
	}

	weight = {
		base = 0

		modifier = {
			add = 0.2
			has_technology = tech_housing_2
			any_owned_nonprimary_starbase = {
				exists = planet
				OR = {
					AND = {
						has_starbase_size = orbital_ring_tier_1
						count_starbase_modules = { count < 2 }
					}
					AND = {
						has_starbase_size = orbital_ring_tier_2
						count_starbase_modules = { count < 3 }
					}
					AND = {
						has_starbase_size = orbital_ring_tier_3
						count_starbase_modules = { count < 4 }
					}
				}
			}
		}
		modifier = {
			add = 0.3
			has_technology = tech_starbase_4
			any_owned_nonprimary_starbase = {
				has_starbase_size = orbital_ring_tier_1
				exists = planet
			}
		}
		modifier = {
			add = 0.3
			has_technology = tech_starbase_5
			any_owned_nonprimary_starbase = {
				has_starbase_size = orbital_ring_tier_2
				exists = planet
				planet = {
					OR = {
						has_planetary_ascension_tier >= 3
						has_major_upgraded_capital = yes
					}
				}
				OR = {
					count_starbase_modules = {
						count = 3
					}
					count_starbase_buildings = {
						count = 1
					}
				}
			}
		}
		modifier = {
			factor = 0.1
			is_at_war = yes
		}
	}
	desired_min = {
		base = 50
	}
	desired_max = {
		base = 100
		modifier = {
			factor = 1.5
			has_technology = tech_starbase_5
			any_owned_nonprimary_starbase = {
				has_starbase_size = orbital_ring_tier_2
				exists = planet
				planet = {
					OR = {
						has_planetary_ascension_tier >= 3
						has_major_upgraded_capital = yes
					}
				}
			}
		}
	}
}

influence_expenditure_operations = {
	resource = influence
	type = expenditure
	category = operations

	potential = {
		str_ai_budget_potential_influence_expenditure_operations = yes
		# only allocate influence for operations if we can afford them
		has_resource = {
			type = influence
			amount > 250
		}

		# and if we have a spy network to use them in!
		any_spynetwork = {
			owner = { is_same_value = root }
			is_spynetwork_level >= 20
		}
	}

	weight = {
		weight = 0.05

		modifier = {
			factor = 2
			has_tradition = tr_subterfuge_finish
		}

		modifier = {
			factor = 2
			any_spynetwork = {
				owner = { is_same_value = root }
				is_spynetwork_level >= 40
			}
		}

		modifier = {
			factor = 1.5
			any_spynetwork = {
				owner = { is_same_value = root }
				is_spynetwork_level >= 60
			}
		}

		modifier = {
			factor = 1.5
			any_spynetwork = {
				owner = { is_same_value = root }
				is_spynetwork_level >= 80
			}
		}
	}

	# based on gather information op
	desired_min = {
		base = 20
	}

	# based on crisis beacon op
	desired_max = {
		base = 320
	}
}
