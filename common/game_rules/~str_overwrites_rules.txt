# Root = claimer
# This = system
can_add_claim = {
	hidden_trigger = {
		if = {
			limit = {
				root = { NOT = { is_country_type = default } }
			}
			always = yes
		}
	}
	custom_tooltip = {
		fail_text = CANNOT_ADD_CLAIM_POLICY
		OR = {
			root = { has_policy_flag = unrestricted_wars }
			AND = {
				exists = owner
				owner = { is_gestalt = yes }
			}
			AND = {
				exists = owner
				owner = {
					any_war = {
						any_attacker = { is_same_value = prevprev }
						any_defender = { is_same_value = root }
					}
				}
			}
		}
	}
	custom_tooltip = {
		fail_text = CANNOT_ADD_CLAIM_NOT_VALID_EMPIRE
		NAND = {
			exists = owner
			owner = {
				NOR = {
					is_country_type = default
					is_country_type = fallen_empire
					is_country_type = awakened_fallen_empire
				}
			}
		}
	}
	custom_tooltip = {
		fail_text = CANNOT_ADD_CLAIM_DEVOURING_SWARM
		NAND = {
			root = { has_valid_civic = civic_hive_devouring_swarm }
			root = { is_lithoid_empire = no }
		}
	}
	custom_tooltip = {
		fail_text = CANNOT_ADD_CLAIM_DEVOURING_SWARM_LITHOID
		NAND = {
			root = { has_valid_civic = civic_hive_devouring_swarm }
			root = { is_lithoid_empire = yes }
		}
	}
	custom_tooltip = {
		fail_text = CANNOT_ADD_CLAIM_ASSIMILATOR
		NOT = { root = { has_valid_civic = civic_machine_assimilator } }
	}
	custom_tooltip = {
		fail_text = CANNOT_ADD_CLAIM_PURIFIERS
		NAND = {
			exists = owner
			root = { has_valid_civic = civic_fanatic_purifiers }
			NOT = {	owner = { is_same_species = root } }
		}
	}
	custom_tooltip = {
		fail_text = CANNOT_ADD_CLAIM_EXTERMINATOR
		NAND = {
			exists = owner
			root = { has_valid_civic = civic_machine_terminator }
			owner = {
				NOR = {
					is_same_species = root
					has_country_flag = synthetic_empire
					has_authority = auth_machine_intelligence
				}
			}
		}
	}
	custom_tooltip = {
		fail_text = CANNOT_ADD_CLAIM_THEY_THREAT
		NAND = {
			exists = owner
			owner = {
				OR = {
					has_valid_civic = civic_hive_devouring_swarm
					has_valid_civic = civic_fanatic_purifiers
					has_valid_civic = civic_machine_terminator
					has_valid_civic = civic_machine_assimilator
				}
			}
			root = {
				NOR = {
					has_valid_civic = civic_hive_devouring_swarm
					has_valid_civic = civic_fanatic_purifiers
					has_valid_civic = civic_machine_terminator
					has_valid_civic = civic_machine_assimilator
				}
			}
		}
	}
	custom_tooltip = {
		fail_text = STR_CANNOT_CLAIM_FALLEN_EMPIRE
		NAND = {
			has_global_flag = str_enabled_flag
			exists = owner
			root = {
				is_ai = yes
			}
			owner = {
				OR = {
					is_country_type = fallen_empire
					is_country_type = awakened_fallen_empire
					merg_is_fallen_empire = yes
					merg_is_awakened_fe = yes
				}
				relative_power = {
					who = root
					category = fleet
					value >= equivalent
				}
			}
		}
	}
}

#Root = country, attacker
#This = country, target
#This rule is a condition for declaring war
can_declare_war = {
	custom_tooltip = {
		fail_text = "ACTION_DECLARE_WAR_OVERLORD_ON_SUBJECT"
		NOT = {
			has_overlord = ROOT
		}
	}
	if = {
		limit = {
			exists = root
			ROOT = {
				has_policy_flag = no_wars
				OR = {
					is_subject = no
					overlord = {
						is_same_value = root
					}
				}
			}
		}
		custom_tooltip = {
			text = "CAN_DECLARE_WAR_POLICY"
			always = no
		}
	}
	if = {
		limit = {
			exists = root
			ROOT = {
				is_ai = yes
			}
		}
		ROOT = {
			is_at_war = no
		}
	}
	if = {
		limit = {
			has_global_flag = str_enabled_flag			# Checks if StarNet or StarTech was loaded.
			exists = root
			OR = {
				root = {
					has_country_flag = str_country_banned_from_declare_war					# Stops country from declaring war, can be used as timed flag. Overrides StarNet truce and other can_declar_war subrules.
				}
				has_country_flag = str_country_war_immunity				# Grants country immunity from having war declared on it, can be used as timed flag. Overrides StarNet truce and other can_declar_war subrules.
				AND = {
					root = {
						OR = {
							is_ai = yes							# On default StarNet truce affects AI only.
							has_global_flag = str_player_will_not_declare_war_until							# Makes players affected by StarNet truce.
						}
						NOT = {
							has_country_flag = str_country_ignore_will_not_declare_war_until							# Excludes given country from StarNet truce.
						}
					}
					NOT = {
						has_global_flag = str_global_disable_will_not_declare_war_until						# Disables StarNet truce entirely.
					}
					event_target:global_event_country = {
						OR = {
							AND = {
								is_variable_set = str_var_ai_will_not_declare_war_until								# Checks if custom truce value was set in the menu. Mods can hook up to change StarNet truce by setting this variable.
								NOT = {
									years_passed >= str_var_ai_will_not_declare_war_until									# Use value set in the menu.
								}
							}
							NOR = {
								is_variable_set = str_var_ai_will_not_declare_war_until								# If truce has not been custom set in the menu then scripted variable will be used (value differs between StarNet and StarTech).
								years_passed >= @str_ai_will_not_declare_war_until								# Use default value as defined in common\scripted_variables. END NOTE: variable str_var_truce_years_localisation will give real truce years value, variable str_var_end_of_truce_year_localisation will give real year when truce ends (use str_calculate_real_truce_years = yes to refresh those if you are not using StarNet menu to change str_var_ai_will_not_declare_war_until).
							}
						}
					}
				}
			}
		}
		custom_tooltip = {
			fail_text = "STR_CAN_DECLARE_WAR"
			always = no
		}
	}
}

#Root = country
#This = planet
can_colonize_planet = {
	if = {
		limit = {
			has_global_flag = str_enabled_flag
			has_modifier = "holy_planet"
			exists = root
			root = {
				is_ai = yes
				NOT = {
					has_relic = r_severed_head
				}
			}
			any_country = {
				has_ai_personality_behaviour = holy_planets
			}
		}
		custom_tooltip = {
			fail_text = "STR_CANNOT_COLONIZE_HOLY_WORLD"
			always = no
		}
	}
}
